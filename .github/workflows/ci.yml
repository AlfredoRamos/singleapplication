name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build:
    name: Qt ${{ matrix.qt-version }}, ${{ matrix.compiler-type }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        qt-version: ['5.11', '5.12', '5.15']
        compiler-type: [gcc, clang]
    steps:
      - name: Checkout sources
        uses: actions/checkout@master

      - name: Install common packages
        run: sudo apt install build-essential cppcheck tree

      - name: Setup Qt
        env:
          QT_VER: ${{ matrix.qt-version }}
          COMP_TYPE: ${{ matrix.compiler-type }}
        run: |
          dist_codename="$(lsb_release -cs)"
          qt_package=""
          if [[ "${QT_VER}" == "5.11" ]]
          then
            sudo add-apt-repository "ppa:beineri/opt-qt-5.11.0-${dist_codename}"
            qt_package=qt511base
          elif [[ "${QT_VER}" == "5.12" ]]
          then
            sudo add-apt-repository "ppa:beineri/opt-qt-5.12.10-${dist_codename}"
            qt_package=qt512base
          elif [[ "${QT_VER}" == "5.15" ]]
          then
            sudo add-apt-repository "ppa:beineri/opt-qt-5.15.2-${dist_codename}"
            qt_package=qt515base
          fi
          sudo apt update
          sudo apt install "${qt_package}"
          echo "QTDIR=/opt/qt${QT_VER//./}" >> $GITHUB_ENV
          echo "/opt/qt${QT_VER//./}/bin" >> $GITHUB_PATH
          if [[ "$(uname -m)" == "x86_64" ]]
          then
            echo "/opt/qt${QT_VER//./}/lib/x86_64-linux-gnu" >> $GITHUB_PATH
            echo "/opt/qt${QT_VER//./}/lib" >> $GITHUB_PATH
          else
            echo "/opt/qt${QT_VER//./}/lib/i386-linux-gnu" >> $GITHUB_PATH
            echo "/opt/qt${QT_VER//./}/lib" >> $GITHUB_PATH
          fi
          echo "/opt/qt${QT_VER//./}/lib/pkgconfig" >> $GITHUB_PATH
          if [[ "${COMP_TYPE}" == "clang" ]]
          then
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          else
            echo "CC=gcc" >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          fi
          mkdir build

      - name: Run Cppcheck
        run: cppcheck --enable=all --inconclusive --report-progress --std=c++11 src/

      - name: QMake package build
        working-directory: build
        run: |
          qmake ../ QMAKE_CC="${CC}" QMAKE_CFLAGS="${CFLAGS}" QMAKE_CXX="${CXX}" QMAKE_CXXFLAGS="${CXXFLAGS}" QMAKE_LINK="${CXX}" CONFIG+=release CONFIG+=pkgconfig
          make
          make INSTALL_ROOT=pkg install
          tree -p pkg/
          rm -fR *

      - name: CMake package build
        working-directory: build
        run: |
          cmake -S ../ -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DGENERATE_PKG_CONFIG=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build . --clean-first
          cmake --install . --prefix pkg/usr/ --strip
          tree -p pkg/
          rm -fR *

      - name: QMake tests
        working-directory: build
        run: |
          qmake ../tests/ QMAKE_CC="${CC}" QMAKE_CFLAGS="${CFLAGS}" QMAKE_CXX="${CXX}" QMAKE_CXXFLAGS="${CXXFLAGS}" QMAKE_LINK="${CXX}"
          make
          make check
          rm -fR *

      - name: CMake tests
        working-directory: build
        run: |
          cmake -S ../tests/
          cmake --build . --clean-first
          ctest -V
          rm -fR *
